From 2f161264a7d2de89266ac6dad9b5d8a5184af11b Mon Sep 17 00:00:00 2001
From: David Michael <dm0@redhat.com>
Date: Tue, 12 Mar 2019 22:54:31 -0400
Subject: [PATCH 11/19] Revert "loop: Push loop_ctl_mutex down to
 loop_change_fd()"

This reverts commit dc717408cef0f97455d3850de348987cb7cc7e6f.
---
 drivers/block/loop.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/drivers/block/loop.c b/drivers/block/loop.c
index c53ad5e88a7d..b4500d82238d 100644
--- a/drivers/block/loop.c
+++ b/drivers/block/loop.c
@@ -692,22 +692,19 @@ static int loop_change_fd(struct loop_device *lo, struct block_device *bdev,
 	struct file	*file, *old_file;
 	int		error;
 
-	error = mutex_lock_killable_nested(&loop_ctl_mutex, 1);
-	if (error)
-		return error;
 	error = -ENXIO;
 	if (lo->lo_state != Lo_bound)
-		goto out_unlock;
+		goto out;
 
 	/* the loop device has to be read-only */
 	error = -EINVAL;
 	if (!(lo->lo_flags & LO_FLAGS_READ_ONLY))
-		goto out_unlock;
+		goto out;
 
 	error = -EBADF;
 	file = fget(arg);
 	if (!file)
-		goto out_unlock;
+		goto out;
 
 	error = loop_validate_file(file, bdev);
 	if (error)
@@ -734,13 +731,11 @@ static int loop_change_fd(struct loop_device *lo, struct block_device *bdev,
 	fput(old_file);
 	if (lo->lo_flags & LO_FLAGS_PARTSCAN)
 		loop_reread_partitions(lo, bdev);
-	mutex_unlock(&loop_ctl_mutex);
 	return 0;
 
-out_putf:
+ out_putf:
 	fput(file);
-out_unlock:
-	mutex_unlock(&loop_ctl_mutex);
+ out:
 	return error;
 }
 
@@ -1475,7 +1470,12 @@ static int lo_ioctl(struct block_device *bdev, fmode_t mode,
 	case LOOP_SET_FD:
 		return loop_set_fd(lo, mode, bdev, arg);
 	case LOOP_CHANGE_FD:
-		return loop_change_fd(lo, bdev, arg);
+		err = mutex_lock_killable_nested(&loop_ctl_mutex, 1);
+		if (err)
+			return err;
+		err = loop_change_fd(lo, bdev, arg);
+		mutex_unlock(&loop_ctl_mutex);
+		break;
 	case LOOP_CLR_FD:
 		return loop_clr_fd(lo);
 	case LOOP_SET_STATUS:
-- 
2.20.1

